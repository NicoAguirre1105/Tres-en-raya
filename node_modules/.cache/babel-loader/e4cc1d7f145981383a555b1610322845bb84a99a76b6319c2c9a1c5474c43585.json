{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicof\\\\OneDrive\\\\Desktop\\\\Personal\\\\Projects\\\\MAP\\\\tic-tac-toe\\\\src\\\\Components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { Children, useState } from 'react';\nimport '../CSS/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TURNS = {\n  X: 'X',\n  O: 'O'\n};\nconst WINNER_COMBOS = [[0, 1, 2][(3, 4, 5)][(6, 7, 8)][(0, 3, 6)][(1, 4, 7)][(2, 5, 8)][(0, 4, 8)][(2, 4, 6)]];\nconst Square = ({\n  children,\n  isSelected,\n  updateBoard,\n  index\n}) => {\n  const className = `square ${isSelected ? 'is-selected' : ''}`;\n  const handleClick = () => {\n    updateBoard(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    onClick: handleClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Square;\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState(TURNS.X);\n  const [winner, setWinner] = useState(null);\n  const checkWinner = boardToCheck => {\n    for (const combo of WINNER_COMBOS) {\n      const [a, b, c] = combo;\n      if (boardToCheck[a] && boardToCheck[a] === boardToCheck[b] && boardToCheck[a] === boardToCheck[c]) return boardToCheck[a];\n    }\n    return null;\n  };\n  const updateBoard = index => {\n    if (board[index]) return;\n    const newBoard = [...board];\n    newBoard[index] = turn;\n    setBoard(newBoard);\n    const newTurn = turn === TURNS.X ? TURNS.O : TURNS.X;\n    setTurn(newTurn);\n    const newWinner = checkWinner(newBoard);\n    if (newWinner) {\n      setWinner(newWinner);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"game\",\n      children: board.map((_, index) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          index: index,\n          updateBoard: updateBoard,\n          children: board[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"turn\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        isSelected: turn === TURNS.X,\n        children: TURNS.X\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        isSelected: turn === TURNS.O,\n        children: TURNS.O\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+NeHwT2HIdknz0WKIXZ9+qo0ZqI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Children","useState","jsxDEV","_jsxDEV","TURNS","X","O","WINNER_COMBOS","Square","children","isSelected","updateBoard","index","className","handleClick","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","board","setBoard","Array","fill","turn","setTurn","winner","setWinner","checkWinner","boardToCheck","combo","a","b","c","newBoard","newTurn","newWinner","map","_","_c2","$RefreshReg$"],"sources":["C:/Users/nicof/OneDrive/Desktop/Personal/Projects/MAP/tic-tac-toe/src/Components/App.jsx"],"sourcesContent":["import { Children, useState } from 'react';\nimport '../CSS/App.css';\n\nconst TURNS = \n{\n  X : 'X',\n  O : 'O'\n}\n\nconst WINNER_COMBOS = \n[\n  [0, 1, 2]\n  [3, 4, 5]\n  [6, 7, 8]\n  [0, 3, 6]\n  [1, 4, 7]\n  [2, 5, 8]\n  [0, 4, 8]\n  [2, 4, 6]\n]\n\n\nconst Square = ({children, isSelected, updateBoard, index})  => {\n\n  const className = `square ${isSelected ? 'is-selected' : ''}`\n  const handleClick = () => {\n    updateBoard(index)\n  }\n\n  return (\n    <div className={className} onClick={handleClick}>\n      {children}\n    </div>\n  )\n}\n\nfunction App() {\n\n  const [board, setBoard] = useState(Array(9).fill(null))\n  const [turn, setTurn] = useState(TURNS.X)\n  const [winner, setWinner] = useState(null)\n\n  const checkWinner = (boardToCheck) => {\n    for (const combo of WINNER_COMBOS) {\n      const [a, b, c] = combo\n      if (\n        boardToCheck[a] && \n        boardToCheck[a] === boardToCheck[b] &&\n        boardToCheck[a] === boardToCheck[c] \n      ) return boardToCheck[a]\n    }\n\n    return null\n  }\n\n  const updateBoard = (index) => {\n\n    if(board[index]) return\n\n    const newBoard = [...board]\n    newBoard[index] = turn\n    setBoard(newBoard)\n\n    const newTurn = turn === TURNS.X ? TURNS.O : TURNS.X\n    setTurn(newTurn)\n\n    const newWinner = checkWinner(newBoard)\n    if (newWinner) {\n      setWinner(newWinner)\n    }\n  }\n\n  return (\n    <main className='board'>\n      <h1>Tic Tac Toe</h1>\n      <section className='game'>\n        {\n          board.map((_, index) => {\n            return (\n              <Square \n                key={index}\n                index = {index}\n                updateBoard={updateBoard}\n              >\n                {board[index]}\n              </Square>\n            )\n          })\n        }\n      </section>\n      <section className=\"turn\">\n        <Square isSelected={turn === TURNS.X}>\n          {TURNS.X}\n        </Square>\n        <Square isSelected={turn === TURNS.O}>\n          {TURNS.O}\n        </Square>\n      </section>\n    </main>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}